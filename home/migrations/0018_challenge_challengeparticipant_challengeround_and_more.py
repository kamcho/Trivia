# Generated by Django 4.2.13 on 2025-09-24 21:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('home', '0017_question_allowed_levels'),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('mode', models.CharField(choices=[('individual', 'Individual'), ('group', 'Group')], max_length=12)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='pending', max_length=12)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('best_of', models.PositiveIntegerField(blank=True, help_text='Odd number of rounds for best-of; null for single-round', null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_challenges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChallengeParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('challenger', 'Challenger'), ('invitee', 'Invitee')], default='invitee', max_length=12)),
                ('is_active', models.BooleanField(default=True)),
                ('team_name', models.CharField(blank=True, max_length=100)),
                ('joined_at', models.DateTimeField(blank=True, null=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='home.challenge')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='challenge_participations', to='home.triviagroup')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='challenge_participations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeRound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('round_number', models.PositiveIntegerField(default=1)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rounds', to='home.challenge')),
                ('quiz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='challenge_rounds', to='home.testquiz')),
            ],
            options={
                'ordering': ['round_number', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ChallengeRoundAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked_attempts', to='home.challenge')),
                ('group_attempt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='challenge_links', to='home.grouptestquizattempt')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked_attempts', to='home.challengeparticipant')),
                ('round', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='linked_attempts', to='home.challengeround')),
                ('user_attempt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='challenge_links', to='home.testquizattempt')),
            ],
            options={
                'indexes': [models.Index(fields=['challenge'], name='home_challe_challen_71cddf_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='challengeroundattempt',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('user_attempt__isnull', False), ('group_attempt__isnull', True)), models.Q(('user_attempt__isnull', True), ('group_attempt__isnull', False)), _connector='OR'), name='chk_one_attempt_linked'),
        ),
        migrations.AddConstraint(
            model_name='challengeround',
            constraint=models.UniqueConstraint(fields=('challenge', 'round_number'), name='uniq_challenge_round_number'),
        ),
        migrations.AddIndex(
            model_name='challengeparticipant',
            index=models.Index(fields=['challenge'], name='home_challe_challen_d00c4e_idx'),
        ),
        migrations.AddIndex(
            model_name='challengeparticipant',
            index=models.Index(fields=['is_active'], name='home_challe_is_acti_3451cf_idx'),
        ),
        migrations.AddIndex(
            model_name='challenge',
            index=models.Index(fields=['mode', 'status'], name='home_challe_mode_c9aa13_idx'),
        ),
        migrations.AddIndex(
            model_name='challenge',
            index=models.Index(fields=['scheduled_at'], name='home_challe_schedul_912841_idx'),
        ),
    ]
